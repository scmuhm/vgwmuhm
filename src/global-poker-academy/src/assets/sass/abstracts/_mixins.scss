@import "vars";

/* breakpoints */

$break-desktop: 1440px;
$break-desktop-medium: 960px;
$break-mobile: 430px;
$break-mobile-large: 680px;
$break-mobile-play-btn: 480px;


@mixin wrapper() {
    max-width: 960px;
    margin: 0 auto !important;
}

@mixin rgba($color, $alpha) {
  background: rgba($color, $alpha);
}

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin headings($from: 1, $to: 6) {
    @for $i from $from through $to {
        h#{$i} {
            @content
        }
    }
}

@mixin font-size($sizeValue: 1.4) {
    font-size: ($sizeValue * 10) + px;

}

@mixin monserrat-font-stack() {
    font-family: Montserrat,sans-serif;
}

@mixin respond-to($media) {
    @if $media==mobile {
        @media only screen and (max-width: $break-mobile + 1) {
            @content;
        }
    } @else if $media==mobile-large {
        @media only screen and (max-width: $break-mobile-large) {
            @content;
        }
    } @else if $media==tablet {
        @media only screen and (min-width: $break-mobile + 1) and (max-width: $break-desktop - 1) {
            @content;
        }
    } @else if $media==all-mobile {
        @media only screen and (max-width: $break-desktop - 1) {
            @content;
        }
    } @else if $media==desktop {
        @media only screen and (min-width: $break-desktop - 1) {
            @content;
        }
    } @else if $media==desktop-medium {
        @media only screen and (min-width: $break-desktop-medium) {
            @content;
        }
    } @else if $media==play-btn {
        @media only screen and (min-width: $break-mobile-play-btn) {
            @content;
        }
    }
}

@mixin border-basic($position:all, $border-color:$border-gray, $border-width:1px) {
    @if $position!=all {
        border-#{$position}-width: $border-width;
        border-#{$position}-style: solid;
        border-#{$position}-color: $border-color;
    } @else {
        border-width: $border-width;
            border-style: solid;
            border-color: $border-color;
    }
}

@mixin fixed-bg($pos, $min-height:240px) {
    background-position: $pos;
    background-attachment: fixed;
    min-height: $min-height;
}

@mixin linear-gradient($direction, $color-stops...) {
    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction)==false {
        $color-stops: $direction, $color-stops;
        $direction: 180deg;
    }

    background: nth(nth($color-stops, 1), 1);
    background: linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}

@mixin default-link-button {
  @include border-basic;
  @include font-size(1.2);

  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
  margin: 5px 0;
  padding: 10px 15px;
  text-align: center;
  text-decoration: none;
  font-weight: bold;

  &:hover {
      color: $text-basic;
      background: $bg-light-gray;
  }
}
